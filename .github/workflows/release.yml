on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: readme.md
          draft: false
          prerelease: false
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.5'
      - name: Add version
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          envsubst < cli/cmd/root.go > cli/cmd/root2.go
          rm cli/cmd/root.go
      - name: Build Linux Binary
        run: cd cli && CGO_ENABLED=0 GOOS=linux go build -o . -v ./...
      - name: Zip Artifact Linux
        run: mv cli/driving-journal-estimate dje && chmod +x dje && tar -czvf linux-bin.tar.gz dje
      - name: Build Mac Binary
        run: cd cli && CGO_ENABLED=0 GOOS=darwin go build -o . -v ./...
      - name: Zip Artifact Mac
        run: mv cli/driving-journal-estimate dje && chmod +x dje && tar -czvf mac-bin.tar.gz dje
      - name: Upload Release Asset Linux
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./linux-bin.tar.gz
          asset_name: linux-bin.tar.gz
          asset_content_type: application/x-tar
      - name: Upload Release Asset Mac
        id: upload-release-asset-mac
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./mac-bin.tar.gz
          asset_name: mac-bin.tar.gz
          asset_content_type: application/x-tar